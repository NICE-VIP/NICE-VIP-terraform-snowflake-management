name: Terraform Apply

on:
  push:
    branches:
      - main

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      TF_VAR_snowflake_organization_name: ${{ secrets.SNOWFLAKE_ORGANIZATION_NAME }}
      TF_VAR_snowflake_account_name: ${{ secrets.SNOWFLAKE_ACCOUNT_NAME }}
      TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
      TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}

      TF_VAR_snowflake_organization_name_2: ${{ secrets.SNOWFLAKE_ORGANIZATION_NAME_2 }}
      TF_VAR_snowflake_account_name_2: ${{ secrets.SNOWFLAKE_ACCOUNT_NAME_2 }}
      TF_VAR_snowflake_user_2: ${{ secrets.SNOWFLAKE_USER_2 }}
      TF_VAR_snowflake_password_2: ${{ secrets.SNOWFLAKE_PASSWORD_2 }}

      TF_CLOUD_ORGANIZATION: "nice-vip"
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_WORKSPACE: "nice-renew-monitoring" 

      PUSHGATEWAY_URL: ${{ secrets.MONITOR_VM_IP }}
      PUSHGATEWAY_JOB: "terraform-apply"
      TERRAFORM_PLAN_PATH: terraform-apply-plan-${{ github.run_id }}.json
      TERRAFORM_PLAN_LOG_PATH: terraform-plan-${{ github.run_id }}.log
      TERRAFORM_APPLY_LOG_PATH: terraform-apply-${{ github.run_id }}.log
      TERRAFORM_REFRESH_LOG_PATH: terraform-refresh-${{ github.run_id }}.log
      GITHUB_RUN_ID: ${{ github.run_id }} 

    steps:
      - name: Set start time
        run: echo "TERRAFORM_START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Commit Message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Refresh
        run: terraform refresh | tee terraform-refresh-${{ github.run_id }}.log

      - name: Terraform Plan and save Logs
        run: terraform plan -out=tfplan | tee terraform-plan-${{ github.run_id }}.log 

      - name: Terraform Apply and save Logs
        run: terraform apply -auto-approve tfplan | tee terraform-apply-${{ github.run_id }}.log

      - name: Terraform Plan JSON
        run: terraform show -json tfplan | tee terraform-apply-plan-${{ github.run_id }}.json

      - name: Checkout Exporter Repo
        uses: actions/checkout@v4
        with:
          repository: Samir-Wankhede/terraform-prometheus-pushgateway-exporter
          path: exporter

      - name: Move JSON into exporter
        run: |
          mv terraform-apply-${{ github.run_id }}.log exporter/
          mv terraform-apply-plan-${{ github.run_id }}.json exporter/
          mv terraform-refresh-${{ github.run_id }}.log exporter/

      - name: Run Go Metrics Exporter
        run: |
          cd exporter
          go mod tidy
          go build -o exporter .
          ./exporter

      - name: Send Apply log to monitoring VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.MONITOR_VM_IP }}
          username: ${{ secrets.MONITOR_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "exporter/terraform-apply-${{ github.run_id }}.log"
          target: "/opt/terraform-logs/${{ github.run_id }}/"

      - name: Send Apply Plan JSON to monitoring VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.MONITOR_VM_IP }}
          username: ${{ secrets.MONITOR_VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "exporter/terraform-apply-plan-${{ github.run_id }}.json"
          target: "/opt/terraform-logs/${{ github.run_id }}/"
